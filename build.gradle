plugins {
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version "3.1.1"
    id ("jacoco")
}

version = "0.1"
group = "com.sus"

apply plugin: 'jacoco'

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
}
repositories {
    mavenCentral()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-XX:TieredStopAtLevel=1')

assemble.dependsOn shadowJar

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

shadowJar {
    mergeServiceFiles()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.sus.*")
    }
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    implementation("io.micronaut.rxjava2:micronaut-rxjava2")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut:micronaut-validation")
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: 1.70
    compileOnly "com.google.code.findbugs:jsr305"
    compileOnly("org.projectlombok:lombok")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly "org.postgresql:postgresql"
    runtimeOnly "io.micronaut.sql:micronaut-jdbc-hikari"

    testImplementation "io.micronaut.rxjava2:micronaut-rxjava2-http-client"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "org.assertj:assertj-core"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params'


    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testRuntimeOnly "com.h2database:h2"
}


application {
    mainClass.set("com.sus.Application")
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.sus.Application'
        )
    }
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs = [
            '-parameters'
    ]
}

task stage(dependsOn: ['build', 'clean'])

build.mustRunAfter clean

graalvmNative.toolchainDetection = false
